import * as t from 'io-ts';
export declare enum RiskAssessmentHeader {
    AndroidSDKPrefix = "imx-core-sdk-android",
    WalletSDKPrefix = "x-wallet-sdk-version"
}
export declare enum MFAOption {
    Email = "EMAIL"
}
export declare const MFAOptionTypeT: t.Type<MFAOption, MFAOption, unknown>;
export declare enum AwaitingOrderStatus {
    Settled = "settled",
    AwaitingApproval = "awaiting_approval",
    Expired = "expired",
    MFATriggerFailed = "mfa_trigger_failed",
    Confirmed = "confirmed",
    SettlementFailed = "settlement_failed"
}
export declare const AwaitingOrderStatusTypeT: t.Type<AwaitingOrderStatus, AwaitingOrderStatus, unknown>;
export declare type VerifyOTPParams = t.OutputOf<typeof VerifyOTPParamsCodec>;
export declare const VerifyOTPParamsCodec: t.PartialC<{
    mfa_option: t.Type<MFAOption, MFAOption, unknown>;
    ether_key: t.BrandC<t.StringC, import("../runtime").EthAddressBrand>;
    request_id: t.StringC;
    code: t.StringC;
}>;
export declare type VerifyOTPResponse = t.OutputOf<typeof VerifyOTPResponseCodec>;
export declare const VerifyOTPResponseCodec: t.PartialC<{
    request_id: t.StringC;
    status: t.StringC;
}>;
export declare type GetAwaitingOrderStatusResponse = t.OutputOf<typeof GetAwaitingOrderStatusResponseCodec>;
export declare const GetAwaitingOrderStatusResponseCodec: t.PartialC<{
    status: t.Type<AwaitingOrderStatus, AwaitingOrderStatus, unknown>;
}>;
